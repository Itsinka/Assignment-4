Task-1:  
import java.util.Scanner; 
 
public class GraphAdjacencyMatrix { 
  public static void main(String[] args) { 
    Scanner sc = new Scanner(System.in); 
    int n = sc.nextInt(); 
    int[][] matrix = new int[n][n]; 
 
    // Read the matrix 
    for (int i = 0; i < n; i++) { 
      for (int j = 0; j < n; j++) { 
        matrix[i][j] = sc.nextInt(); 
      } 
    } 
 
    int count_sym = 0; 
    int count_diag = 0; 
 
    // Check if the matrix can be the adjacency matrix of a simple undirected graph 
    for (int i = 0; i < n; i++) { 
      for (int j = 0; j < n; j++) { 
        // Check if the matrix is symmetric 
        if (matrix[i][j] == matrix[j][i]) { 
          count_sym++; 
        } 
        // Check if there is a self-loop 
        if (i == j && matrix[i][j] == 1) { 
          System.out.println("NO"); 
          return; 
        } 
        // Count the number of edges 
        if (matrix[i][j] == 1) { 
          count_diag++; 
        } 
      } 
    } 
 
    // Check if the number of edges is less than or equal to n * (n-1) / 2 
    if (count_sym == n * n && count_diag <= n * (n-1) / 2) { 
      System.out.println("YES"); 
    } else { 
      System.out.println("NO"); 
    } 
  } 
} 
 
 

